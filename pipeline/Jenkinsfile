pipeline{
    environment { // Declaration of environment variables
        DOCKER_ID = "axdeo" // replace this with your docker-id
        DOCKER_TAG = "v.${BUILD_ID}.0" // we will tag our images with the current build in order to increment the value by 1 with each new build
    }

    agent any
    stages{

        stage('run dockercompose'){
            steps{
                script{
                sh '''
                  docker-compose up -d
                '''
                }
            }
        }

        stage('test dockercompose') {
            steps{
                script{
                sh '''
                curl -I GET http://localhost:8080/api/v1/movies/docs 
                curl -I  GET http://localhost:8080/api/v1/casts/docs
                '''
                }
            }
        }

        stage('Docker Build movie-service'){
            environment
            {
                DOCKER_IMAGE = "movie-service"
            }

            steps {
                script {
                sh '''
                cd $DOCKER_IMAGE/
                docker build $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                '''
                }
            }

        }

        stage('Docker Build  cast-service'){
            environment
            {
                DOCKER_IMAGE = "cast-service"
            }

            steps {
                script {
                sh '''
                cd $DOCKER_IMAGE/
                docker build $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                '''
                }
            }

        }

        stage('Docker Push cast-service'){
            environment
            {
                DOCKER_PASS = credentials("DOCKER_HUB_PASS")
                DOCKER_IMAGE = "cast-service"
            }

            steps {
                script {
                sh '''
                cd $DOCKER_IMAGE/
                docker login -u $DOCKER_ID -p $DOCKER_PASS
                docker push $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                '''
                }
            }

        }

        stage('Docker Push movie-service'){
            environment
            {
                DOCKER_PASS = credentials("DOCKER_HUB_PASS")
                DOCKER_IMAGE = "movie-service"
            }

            steps {
                script {
                sh '''
                cd $DOCKER_IMAGE/
                docker login -u $DOCKER_ID -p $DOCKER_PASS
                docker push $DOCKER_ID/$DOCKER_IMAGE:$DOCKER_TAG
                '''
                }
            }

        }


    }
}
